{
    "project": {},
    "files": {
        "src\\webVis\\jquery.js": {
            "name": "src\\webVis\\jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\webVis\\partRender.js": {
            "name": "src\\webVis\\partRender.js",
            "modules": {},
            "classes": {},
            "fors": {
                "renderGlobal": 1
            },
            "namespaces": {}
        },
        "src\\webVis\\renderScript.js": {
            "name": "src\\webVis\\renderScript.js",
            "modules": {},
            "classes": {
                "renderGlobal": 1
            },
            "fors": {
                "renderGlobal": 1
            },
            "namespaces": {}
        },
        "src\\webVis\\sigma.canvas.edges.curvedArrow.js": {
            "name": "src\\webVis\\sigma.canvas.edges.curvedArrow.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "renderGlobal": {
            "name": "renderGlobal",
            "shortname": "renderGlobal",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\webVis\\renderScript.js",
            "line": 6,
            "description": "Class containing all the methods used in the 3d visual assembly",
            "static": 1
        }
    },
    "elements": {
        "inputState": {
            "name": "inputState",
            "attributes": [],
            "file": "src\\webVis\\renderScript.js",
            "line": 118,
            "description": "Contains a representation of the last keyboard events reported by the \n web page for each given key that acts as input for manipulating the\n visulization: 'W','A','S','D','R','F', and the 'Space' key",
            "return": {
                "description": "",
                "type": "Void"
            }
        }
    },
    "classitems": [
        {
            "file": "src\\webVis\\jquery.js",
            "line": 890,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, object)"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 910,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 919,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created element and returns a boolean result",
                    "type": "Function"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 940,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 954,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 982,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 993,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1004,
            "description": "Returns a function to use in pseudos for :enabled/:disabled",
            "params": [
                {
                    "name": "disabled",
                    "description": "true for :disabled; false for :enabled",
                    "type": "Boolean"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1032,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1054,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1066,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1078,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1532,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 1565,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 2594,
            "description": "A low-level selection function that works with Sizzle's compiled\n selector functions",
            "params": [
                {
                    "name": "selector",
                    "description": "A selector or a pre-compiled\n selector function built with Sizzle.compile",
                    "type": "String|Function"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "results",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "seed",
                    "description": "A set of elements to match against",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 9606,
            "description": "Load a url into a page",
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\jquery.js",
            "line": 9698,
            "description": "Gets a window from an element",
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 5,
            "description": "Accepts an array of objects containing a string property called \"Name\" and returns\n the first index where any two \"Name\" properties in the array have different characters.",
            "itemtype": "method",
            "name": "getPartNameCutoff",
            "params": [
                {
                    "name": "partFrames",
                    "description": "An array of objects, each of which should containin\n a property called \"Name\" with a non-null string.",
                    "type": "Object Array"
                }
            ],
            "return": {
                "description": "The first index where any two \"Name\" properties in the array are different.",
                "type": "Int"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 40,
            "description": "Accepts an array of objects containing a string property called \"Name\" removes\n the first N characters in each string, where N is the first index where any two\n \"Name\" properties in the array have different characters.",
            "itemtype": "method",
            "name": "cutoffPartNames",
            "params": [
                {
                    "name": "partFrames",
                    "description": "An array of objects, each of which should containin\n a property called \"Name\" with a non-null string.",
                    "type": "Object Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 68,
            "description": "Finds the average position of all the vertices in a given threeJS Geometry model.",
            "itemtype": "method",
            "name": "centerGeometry",
            "params": [
                {
                    "name": "theGeo",
                    "description": "",
                    "type": "ThreeJS Geometry Object"
                }
            ],
            "return": {
                "description": "A 3d coordinate, with each component being the unweighted\n average of the corresponding component in each vector in the provided geometry object. If nodeName\n vertices are present in the object, a zeroed vector is returned.",
                "type": "ThreeJS Vector3 Object"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 134,
            "description": "Combines a given array of objects (each associating an array of keyframes to name) with a \n given array of objects (each associating a threeJS mesh with a name), creating an array\n of objects with keyFrame arrays and threeJS meshes associated with the same name",
            "itemtype": "method",
            "name": "bindPartsToKeyFrames",
            "params": [
                {
                    "name": "theKeyFrameLists",
                    "description": "An array of objects, each containing an array of keyframe objects \n called \"Frames\" and a string property called \"Name\")",
                    "type": "Array"
                },
                {
                    "name": "theParts",
                    "description": "An array of objects, each containing a threeJS mesh object called \"Mesh\" and\n a string property called \"Name\"",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 199,
            "description": "Combines a jagged array of objects, each object at least possessing a numeric\n property called \"Time\", returns the value of the greatest \"Time\" property",
            "itemtype": "method",
            "name": "longestTimeFromFrames",
            "params": [
                {
                    "name": "partFrames",
                    "description": "The jagged array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The greatest \"Time\" value in the jagged array",
                "type": "Int"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 232,
            "description": "Given a jagged array of objects, each object at least possessing a numeric\n property called \"Time\", sets each Time property to the greatest Time value in\n the jagged array minus the origional value, thus effectively reversing the\n temporal order of each object",
            "itemtype": "method",
            "name": "flipTheTimes",
            "params": [
                {
                    "name": "partFrames",
                    "description": "The jagged array",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The greatest \"Time\" value in the jagged array",
                "type": "Int"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 267,
            "description": "Logs the contents of the given jagged array of keyFrame objects, each containing numeric properties \"X\",\n \"Y\", \"Z\", and \"Time\", to the console as a string.",
            "itemtype": "method",
            "name": "showFrames",
            "params": [
                {
                    "name": "partFrames",
                    "description": "A jagged array of keyframe objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 305,
            "description": "Logs the contents of a given keyFrame object, containing numeric properties \"X\",\n \"Y\", \"Z\", and \"Time\", to the console as a string.",
            "itemtype": "method",
            "name": "showFrames",
            "params": [
                {
                    "name": "partFrames",
                    "description": "A jagged array of keyframe objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 323,
            "description": "Returns true if any position component of the given keyframe object is NaN",
            "itemtype": "method",
            "name": "hasNaN",
            "params": [
                {
                    "name": "partFrames",
                    "description": "A keyFrame object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\partRender.js",
            "line": 340,
            "description": "Returns a copy of the provided keyframe object",
            "itemtype": "method",
            "name": "copyFrame",
            "params": [
                {
                    "name": "partFrames",
                    "description": "A keyFrame object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The copy",
                "type": "Object"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 26,
            "description": "The function which handles the actual rendering of the solution file animation\n and loading in the models",
            "itemtype": "method",
            "name": "renderData",
            "params": [
                {
                    "name": "theXMLFile",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "theSTLFiles",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 275,
            "description": "Attempts to lock the mouse for camera manupulation",
            "itemtype": "method",
            "name": "tryMouseLock",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 297,
            "description": "Adds or Removes event listeners for input meant for camera manipulation.\n Is triggered by a change in the state of the mouse locking or unlocking. \n The mouse locking results in input listeners being added to the webpage,\n whereas the unlocking of the mouse results in the removal of appropriate\n listeners.",
            "itemtype": "method",
            "name": "lockChange",
            "params": [
                {
                    "name": "e",
                    "description": "The event that is to be applied to the function by event listeners upon\n a change in the state of mouselock",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 337,
            "description": "Changes the orientation of the camera based off of the mouse movement\n contained in the supplied mouse movement event. X-axis movement\n corresponds to change in the yaw of the camera whereas Y-axis movement\n corresponds to a change in the pitch of the camera.",
            "itemtype": "method",
            "name": "mouseMoved",
            "params": [
                {
                    "name": "e",
                    "description": "The mouse movement event to be supplied to the function by a mouse \n movement event listener on the web page",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 384,
            "description": "Accepts a key press event and, if the key press corresponds to one\n of the keys used for manipulating the view, sets the proper components\n of \"inputState\" to true.",
            "itemtype": "method",
            "name": "registerDown",
            "params": [
                {
                    "name": "e",
                    "description": "The key down event to be supplied to the function by a key down event \n listener on the web page",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 443,
            "description": "Accepts a key press release and, if the key release corresponds to one\n of the keys used for manipulating the view, sets the proper components\n of \"inputState\" to false",
            "itemtype": "method",
            "name": "registerDown",
            "params": [
                {
                    "name": "e",
                    "description": "The key up event to be supplied to the function by a key up event \n listener on the web page",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 500,
            "description": "Once called, interprets the current state of registered inputs and manipulates \n the visualization accordingly, including the accelleration of the camera, as\n affected by the W,S,A, and D keys, and the rotation of the camera if the F key\n is depressed and there currently is a highlighted object of interest",
            "itemtype": "method",
            "name": "manageControls",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 601,
            "description": "The main portion of the visualization's rendering cycle, managing frame rate,\n input, camera decelleration, keyframe manipulation, model animation, object highlighting,\n and informational display.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 682,
            "description": "Accepts a string and outputs the string of all characters following the final '.' symbol\n in the string. This is used internally to extract file extensions from file names.",
            "itemtype": "method",
            "name": "grabExtension",
            "params": [
                {
                    "name": "theName",
                    "description": "The file name to be processed",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the extension in the given file name. If no extension is found, the \n 'undefined' value is returned.",
                "type": "String"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 715,
            "description": "Accepts a fileinput event, presumably from a file upload event listener, and assigns\n functions to each file reader listed in the event to be called upon the full loading\n of that given reader's files",
            "itemtype": "method",
            "name": "readMultipleFiles",
            "params": [
                {
                    "name": "evt",
                    "description": "A fileinput event, to be given by a fileinput event listener",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 784,
            "description": "Called internally upon every recieved fileload event. Checks if every file reader in the \n array \"fileReaders\" has fully read each of their files. If so, then the function converts\n all recieved stl files into threeJS models and executes \"renderParts\".",
            "itemtype": "method",
            "name": "loadParts",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 854,
            "description": "Called internally by \"loadParts\". Parses the text stored in \"theXML\" into a tree\n structure composed of nested javascript objects and converts that structure into a\n series of keyframe arrays, each of which are stored alongside their respective \n parts in \"partFrames\". Additionally, generates the path lines for each subassembly\n and inserts those lines into \"scene\".",
            "itemtype": "method",
            "name": "renderParts",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\renderScript.js",
            "line": 929,
            "description": "Toggles the display of the HTML div element containing the treequence representation of\n the assembly.",
            "itemtype": "method",
            "name": "showHideTreequence",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "renderGlobal"
        },
        {
            "file": "src\\webVis\\sigma.canvas.edges.curvedArrow.js",
            "line": 6,
            "description": "This edge renderer will display edges as curves with arrow heading.",
            "params": [
                {
                    "name": "edge",
                    "description": "The edge object.",
                    "type": "Object"
                },
                {
                    "name": "source",
                    "description": "node  The edge source node.",
                    "type": "Object"
                },
                {
                    "name": "target",
                    "description": "node  The edge target node.",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "The canvas context.",
                    "type": "CanvasRenderingContext2D"
                },
                {
                    "name": "settings",
                    "description": "The settings function.",
                    "type": "Configurable"
                }
            ],
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\webVis\\jquery.js:890"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\webVis\\jquery.js:954"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\webVis\\jquery.js:1054"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\webVis\\jquery.js:1066"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\webVis\\jquery.js:1078"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " src\\webVis\\jquery.js:890"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " src\\webVis\\jquery.js:910"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " src\\webVis\\jquery.js:919"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " src\\webVis\\jquery.js:940"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " src\\webVis\\jquery.js:954"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " src\\webVis\\jquery.js:982"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " src\\webVis\\jquery.js:993"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for :enabled/:disabled",
            "line": " src\\webVis\\jquery.js:1004"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " src\\webVis\\jquery.js:1032"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " src\\webVis\\jquery.js:1054"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " src\\webVis\\jquery.js:1066"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " src\\webVis\\jquery.js:1078"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " src\\webVis\\jquery.js:1532"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " src\\webVis\\jquery.js:1565"
        },
        {
            "message": "Missing item type\nA low-level selection function that works with Sizzle's compiled\n selector functions",
            "line": " src\\webVis\\jquery.js:2594"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " src\\webVis\\jquery.js:9606"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " src\\webVis\\jquery.js:9698"
        },
        {
            "message": "Missing item type\nThis edge renderer will display edges as curves with arrow heading.",
            "line": " src\\webVis\\sigma.canvas.edges.curvedArrow.js:6"
        }
    ]
}